# @format

services:
  traefik:
    image: traefik:v3.1
    container_name: traefik
    restart: always
    ports:
      - '80:80'
      - '8080:8080'
    command:
      - '--api.insecure=true'
      - '--providers.docker=true'
      - '--providers.docker.exposedbydefault=false'
      - '--entryPoints.web.address=:80'
    volumes:
      - '/var/run/docker.sock:/var/run/docker.sock'
    networks:
      - workstation

  whoami:
    image: 'traefik/whoami'
    container_name: 'simple-service'
    networks:
      - workstation
    restart: always
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.whoami.rule=Host(`whoami.workstation`)'
      - 'traefik.http.routers.whoami.entrypoints=web'

  portainer:
    container_name: portainer
    image: 'portainer/portainer-ce'
    restart: always
    volumes:
      - '/var/run/docker.sock:/var/run/docker.sock'
      - 'portainer_data:/data'
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.portainer.rule=Host(`portainer.workstation`)'
      - 'traefik.http.routers.portainer.entrypoints=web'
      - 'traefik.http.services.portainer.loadBalancer.server.port=9000'
    networks:
      - workstation

  dnsmasq:
    container_name: dnsmasq
    image: 'jpillora/dnsmasq'
    restart: always
    volumes:
      - './data/dnsmasq.conf:/etc/dnsmasq.conf'
    logging:
      options:
        max-size: '100m'
    environment:
      HTTP_USER: foo
      HTTP_PASS: bar
    ports:
      # The workaround for MacOS https://docs.docker.com/desktop/release-notes/#known-issues-19
      # in order to allow bind port 53/udp.
      # Please, update files '~/Library/Group Containers/group.com.docker/settings.json'
      # and '~/Library/Group Containers/group.com.docker/settings-store.json' with 'kernelForUDP' set to false.
      - '53:53/udp'
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.dnsmasq.rule=Host(`dnsmasq.workstation`)'
      - 'traefik.http.routers.dnsmasq.entrypoints=web'
      - 'traefik.http.services.dnsmasq.loadBalancer.server.port=8080'
    networks:
      - workstation

networks:
  workstation:
    name: 'workstation'

volumes:
  portainer_data:
